from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from db import (
    get_user_field, unlock_badge, get_user_badges, count_user_tasks
)

BADGES_LIST = [
    ("–°–æ—Ç–∏–π –∫—Ä–æ–∫", "üíØ", "–î–æ—Å—è–≥–Ω–∏ 100 –±–∞–ª—ñ–≤ —Ç–∞ —Å—Ç–∞–Ω—å –º–∞–π—Å—Ç—Ä–æ–º –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏! (+200 –±–∞–ª—ñ–≤)", lambda user_id: (get_user_field(user_id, "score") or 0) >= 100, 200),
    ("–í—Å—ñ —Ç–µ–º–∏!", "üìö", "–í–∏—Ä—ñ—à–∏ –∑–∞–¥–∞—á—ñ —Ö–æ—á–∞ –± –∑ –∫–æ–∂–Ω–æ—ó —Ç–µ–º–∏. (+150 –±–∞–ª—ñ–≤)", lambda user_id: (get_user_field(user_id, "topics_completed") or 0) >= (get_user_field(user_id, "topics_total") or 99), 150),
    ("–¢–∏–∂–Ω–µ–≤–∏–π –≥–µ—Ä–æ–π", "üóìÔ∏è", "–ü—Ä–æ–π–¥–∏ —â–æ–¥–µ–Ω–Ω—ñ –∑–∞–¥–∞—á—ñ 7 –¥–Ω—ñ–≤ –ø–æ—Å–ø—ñ–ª—å! (+100 –±–∞–ª—ñ–≤)", lambda user_id: (get_user_field(user_id, "daily_streak") or 0) >= 7, 100),
    ("–§—ñ–¥–±–µ–∫–µ—Ä", "üì®", "–ù–∞–¥—ñ—à–ª–∏ –≤—ñ–¥–≥—É–∫ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É. (+30 –±–∞–ª—ñ–≤)", lambda user_id: (get_user_field(user_id, "feedbacks") or 0) >= 1, 30),
    ("–ì—É—Ä—É", "üßô‚Äç‚ôÇÔ∏è", "–ü—Ä–æ–π–¥–∏ –≤—Å—ñ –∑–∞–¥–∞—á—ñ —É –±–æ—Ç—ñ. (+500 –±–∞–ª—ñ–≤)", lambda user_id: (get_user_field(user_id, "all_tasks_completed") or False), 500),
]

async def show_badges(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    from handlers.state import user_last_menu
    user_last_menu[user_id] = "badges"
    badges = set(get_user_badges(user_id))
    got_new = False
    new_badges_msgs = []

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –±–µ–π–¥–∂—ñ–≤ (—è–∫—â–æ –¥–æ—Å—è–≥–Ω—É—Ç–æ —É–º–æ–≤–∏)
    for name, emoji, descr, condition, reward in BADGES_LIST:
        if name not in badges and condition(user_id):
            if unlock_badge(user_id, name, reward):
                got_new = True
                new_badges_msgs.append(f"{emoji} <b>{name}</b> ‚Äî –≤—ñ–¥–∫—Ä–∏—Ç–æ! (+{reward} –±–∞–ª—ñ–≤)")

    # –û–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø—ñ—Å–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
    badges = set(get_user_badges(user_id))

    msg = "<b>üõí –ë–æ–Ω—É—Å–∏ / –ë–µ–π–¥–∂—ñ</b>\n\n"
    if got_new:
        msg += "üéâ <b>–í—ñ–¥–∫—Ä–∏—Ç–æ –Ω–æ–≤—ñ –±–µ–π–¥–∂—ñ:</b>\n" + "\n".join(new_badges_msgs) + "\n\n"

    for name, emoji, descr, *_ in BADGES_LIST:
        status = "‚úÖ" if name in badges else "üîí"
        msg += f"{emoji} <b>{name}</b> {status}\n<i>{descr}</i>\n\n"

    keyboard = [[KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]
    await update.message.reply_text(
        msg,
        parse_mode="HTML",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
